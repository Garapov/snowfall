class i{constructor(i,t,s,n,a){this.initialX=i,this.initialRadius=s,this.initialSpeed=n,this.x=i,this.y=t,this.radius=s,this.speed=n,this.wind=a,this.isReset=!1}update(i,t){this.y+=this.speed,this.x+=t,this.isReset=this.y>i+2*this.radius}draw(i){this.y<2*-this.radius||(i.beginPath(),i.arc(0|this.x,0|this.y,this.radius,0,6.283),i.fillStyle="white",i.fill())}reset(i,t){this.x=i,this.y=t,this.isReset=!1}}class t{constructor(i,t={}){let s;this.canvas=i,this.ctx=i.getContext("2d",{alpha:!0}),this.options={count:t.count||100,minRadius:t.minRadius||2,maxRadius:t.maxRadius||5,minSpeed:t.minSpeed||1,maxSpeed:t.maxSpeed||3,wind:t.wind||0,color:t.color||"white",opacity:t.opacity||.8,...t},this.snowflakes=new Array(this.options.count),this.isRunning=!1,this.animationFrame=null,this.lastTime=0,this.frameInterval=1e3/60,this.animate=this.animate.bind(this),this.resize(),this.init(),window.addEventListener("resize",(()=>{s&&clearTimeout(s),s=setTimeout((()=>{this.resize();const i=this.canvas.width;this.snowflakes.forEach((t=>{t.x=Math.random()*i}))}),150)}))}init(){const{width:i,height:t}=this.canvas;for(let s=0;s<this.options.count;s++){const n=Math.random()*i,a=Math.random()*t-t;this.snowflakes[s]=this.createSnowflake(n,a)}}createSnowflake(t=null,s=null){const{minRadius:n,maxRadius:a,minSpeed:e,maxSpeed:h,wind:o}=this.options,d=Math.random()*(a-n)+n,r=e+(h-e)*((d-n)/(a-n));return t=t??Math.random()*this.canvas.width,s=s??Math.random()*-this.canvas.height,new i(t,s,d,r,o)}resize(){const{offsetWidth:i,offsetHeight:t}=this.canvas;this.canvas.width=i,this.canvas.height=t,this.ctx.fillStyle="white"}start(){this.isRunning||(this.isRunning=!0,this.lastTime=performance.now(),this.animate())}stop(){this.isRunning=!1,this.animationFrame&&(cancelAnimationFrame(this.animationFrame),this.animationFrame=null)}animate(i=0){if(!this.isRunning)return;const t=i-this.lastTime;if(t<this.frameInterval)return void(this.animationFrame=requestAnimationFrame(this.animate));this.lastTime=i-t%this.frameInterval;const{width:s,height:n}=this.canvas,{wind:a}=this.options;this.ctx.fillStyle="#1a1a1a",this.ctx.fillRect(0,0,s,n);for(let i=0;i<this.snowflakes.length;i++){const t=this.snowflakes[i];if(t.update(n,a),t.isReset){const i=Math.random()*s,n=(t.radius-this.options.minRadius)/(this.options.maxRadius-this.options.minRadius);t.speed=this.options.minSpeed+(this.options.maxSpeed-this.options.minSpeed)*n,t.wind=a,t.reset(i,-10)}t.draw(this.ctx)}this.animationFrame=requestAnimationFrame(this.animate)}updateOptions(i){const t={...this.options};if(this.options={...this.options,...i},void 0!==i.count){const t=i.count-this.snowflakes.length;if(t>0){const i=this.snowflakes.length;for(let s=0;s<t;s++)this.snowflakes[i+s]=this.createSnowflake()}else t<0&&(this.snowflakes.length=i.count)}const{minRadius:s,maxRadius:n,minSpeed:a,maxSpeed:e,wind:h}=this.options;if(void 0!==i.minRadius||void 0!==i.maxRadius){const i=t.maxRadius-t.minRadius,h=n-s;this.snowflakes.forEach((n=>{const o=(n.radius-t.minRadius)/i;n.radius=s+o*h;const d=(n.radius-s)/h;n.speed=a+(e-a)*d}))}void 0!==i.wind&&this.snowflakes.forEach((i=>{i.wind=h}))}}export{t as SnowfallCanvas};
//# sourceMappingURL=snowfall.min.js.map
